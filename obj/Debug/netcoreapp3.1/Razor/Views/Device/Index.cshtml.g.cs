#pragma checksum "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d42ac6201c55d1d49d7a68477756d4ecc826a7ba"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Device_Index), @"mvc.1.0.view", @"/Views/Device/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/_ViewImports.cshtml"
using studio;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/_ViewImports.cshtml"
using studio.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d42ac6201c55d1d49d7a68477756d4ecc826a7ba", @"/Views/Device/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"17bd241ee090bd8b39c0cf55b12cb73c6c44cc0b", @"/Views/_ViewImports.cshtml")]
    public class Views_Device_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
  
    ViewData["Title"] = "Device Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<link");
            BeginWriteAttribute("href", " href=\"", 54, "\"", 94, 1);
#nullable restore
#line 5 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
WriteAttributeValue("", 61, Url.Content("~/css/devices.css"), 61, 33, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" rel=\"stylesheet\" type=\"text/css\" />\r\n<script type=\"text/javascript\"");
            BeginWriteAttribute("src", " src=\"", 163, "\"", 199, 1);
#nullable restore
#line 6 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
WriteAttributeValue("", 169, Url.Content("~/js/device.js"), 169, 30, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@"></script>

<div id=""container"">

    <div align=""top"" id=""right"" title=""right pane"" >
        <div class=""row"" id=""mqtt_send"" style=""height:30%; border-left:1px"">
            <div class=""col-md-12"">
                <h5 style=""text-align:center;""> Datos de salida Mqtt</h5>
                <div class=""mqtt_send"">
                    
                </div>
            </div>
        </div>
        <div class=""row"" style=""height:70%; border-left:1px"">
            <div class=""col-md-12"">
                <h5  style=""text-align:center;""> Datos de entrada Mqtt</h5>
                <div id=""mqtt_receive"">

                </div>
            </div>
        </div>
    </div>

    <div id=""content-wrapper"">
        
        <div id=""content_devices"">
            <div class=""row"">

                <!-- Device Bind /unbind -->
                <div class=""card col-md-4"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">BIND /UNBIND</h4>
            ");
            WriteLiteral("            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba5278", async() => {
                WriteLiteral(@"

                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">IP Address 1</span></div><input type=""text"" class=""form-control"" id=""bind_ip_add""/>
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Device Id</span></div><input type=""text"" class=""form-control"" id=""bind_device_id"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Tag</span></div><input type=""text"" class=""form-control"" id=""bind_tag"" />
                                <div class=""input-group-append""></div>
                            </div>");
                WriteLiteral("\r\n                            <div class=\"row\" style=\"margin-top:20px;justify-content:center\">\r\n                                <button class=\"btn btn-success\" id=\"bind\"");
                BeginWriteAttribute("type", " type=\"", 2435, "\"", 2442, 0);
                EndWriteAttribute();
                WriteLiteral(">BIND</button>\r\n                                <button class=\"btn btn-danger\" id=\"unbind\"");
                BeginWriteAttribute("type", " type=\"", 2533, "\"", 2540, 0);
                EndWriteAttribute();
                WriteLiteral(">UN-BIND</button>\r\n                            </div>\r\n\r\n\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

                <!--    Device Basic Configuration -->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">CONFIGURACION BASICA </h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba8551", async() => {
                WriteLiteral(@"

                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Nombre Dispositivo</span></div><input type=""text"" class=""form-control"" id=""device_name""/>
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Contrase√±a Dispositivo</span></div><input type=""text"" class=""form-control"" id=""device_passwd""/>
                                <div class=""input-group-append""></div>
                            </div>

                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Fecha y Hora servidor </span></div><input type=""date"" class=""form-control"" id=""server_cur_pts"" />
                                <div class=""input-group-append");
                WriteLiteral(@"""></div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""sync_server_pts_en""");
                BeginWriteAttribute("class", " class=\"", 4223, "\"", 4231, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Sincronizar Hora dispositivo <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""row"" style=""margin-top:20px;justify-content:center"">
                                <button class=""btn btn-success"" id=""basic_config"" style=""text-align:center"">ACTUALIZAR</button>
                            </div>

                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

                <!--    Device Network Configuration -->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">DATOS DE RED</h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba12165", async() => {
                WriteLiteral(@"

                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text""> Direccion IP</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Mascara de red</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Puerta de red</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div");
                WriteLiteral(@" class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Servidor DDNS1</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Servidor DDNS2</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""sync_server_pts_en""");
                BeginWriteAttribute("class", " class=\"", 6967, "\"", 6975, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Utilizar DHCP¬†<label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>

                            <div class=""row"" style=""margin-top:20px;justify-content:center"">
                                <button class=""btn btn-success"" id=""network"" style=""text-align:center"">ACTUALIZAR</button>
                            </div>

                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

                <!--    Device Remote Configuration -->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">BRILLO / VOLUMEN / LUZ</h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba16371", async() => {
                WriteLiteral(@"

                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text""> Volumen </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Brillo </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>

                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""sync_server_pts_en""");
                BeginWriteAttribute("class", " class=\"", 8704, "\"", 8712, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Luz suplementaria <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>

                            <div class=""row"" style=""margin-top:20px;justify-content:center"">
                                <button class=""btn btn-success"" id=""settings"" style=""text-align:center"">ACTUALIZAR</button>
                            </div>

                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

                <!--    Device Temperature Control Parameter Configuration -->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">TEMPERATURA</h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba19525", async() => {
                WriteLiteral("\r\n\r\n                            <div class=\"form-group\">\r\n                                <div class=\"settingsElement\">\r\n                                    <div class=\"onoffswitch\"><input type=\"checkbox\" id=\"temp_dec_en\"");
                BeginWriteAttribute("class", " class=\"", 9801, "\"", 9809, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Toma de temperatura <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""stranger_pass_en""");
                BeginWriteAttribute("class", " class=\"", 10299, "\"", 10307, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Acceso a extra√±os <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""mask_check_en""");
                BeginWriteAttribute("class", " class=\"", 10792, "\"", 10800, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Detecci√≥n de tapabocas <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""save_record""");
                BeginWriteAttribute("class", " class=\"", 11288, "\"", 11296, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Toma de videos <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""form-group"">
                                <div class=""settingsElement"">
                                    <div class=""onoffswitch""><input type=""checkbox"" id=""save_jpeg""");
                BeginWriteAttribute("class", " class=\"", 11774, "\"", 11782, 0);
                EndWriteAttribute();
                WriteLiteral(@" name=""onoffswitch"" /> Toma de instant√°neas <label class=""onoffswitch-label"" for=""myonoffswitch""><span class=""onoffswitch-inner""></span><span class=""onoffswitch-switch""></span></label></div>
                                </div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Temperatura de alarma </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Compensaci√≥n de temperatura </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                   ");
                WriteLiteral(@"             <div class=""input-group-prepend""><span class=""input-group-text"">Tiempo de guardado de instant√°neas. </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""row"" style=""margin-top:20px;justify-content:center"">
                                <button class=""btn btn-success"" id=""temperature"" style=""text-align:center"">ACTUALIZAR</button>
                            </div>
                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>

                <!--   Add single or multiple user photo database information -->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">INGRESO DE USUARIOS A LA BASE DE DATOS</h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba25775", async() => {
                WriteLiteral(@"
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text""> Nombre del lote </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">ID del lote</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Direcci√≥n IP servidor de fotos</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                ");
                WriteLiteral(@"            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Puerto del servidor</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Fecha de ingreso</span></div><input type=""date"" class=""form-control"" id=""active_time"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Fecha de salida</span></div><input type=""date"" class=""form-control"" id=""end_time""/>
                                <div class=""input-group-append""></div>
                            </div>
            ");
                WriteLiteral(@"                <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">ID del usuario</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">Nombre de usuario</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text"">URL de fotograf√≠a.</span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""></div>
                            </div>
                            <div class=");
                WriteLiteral("\"row\" style=\"margin-top:20px;justify-content:center\">\r\n                                <button class=\"btn btn-success\" id=\"adds_user\" style=\"align-self:center\" >ACTUALIZAR</button>\r\n                            </div>\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>    
                    
                <!--   Delete all photo library information-->
                <div class=""card"">
                    <div class=""card-body"">
                        <h4 class=""card-title"">BORRADO EN LA BASE DE DATOS</h4>
                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "d42ac6201c55d1d49d7a68477756d4ecc826a7ba30867", async() => {
                WriteLiteral(@"
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text""> ID del lote </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""><button class=""btn btn-success"" id=""delete_batch"" style=""width:150px;"">BORRAR LOTE</button></div>
                            </div>
                            <div class=""input-group"">
                                <div class=""input-group-prepend""><span class=""input-group-text""> ID del usuario </span></div><input type=""text"" class=""form-control"" />
                                <div class=""input-group-append""><button class=""btn btn-success"" id=""delete_user"" style=""width:150px;"">BORRAR USUARIO</button></div>
                            </div>
                            <div></div>
                            <div class=""row"" style=""justify-content: center"">
                                <button class=""btn btn-da");
                WriteLiteral("nger\" id=\"delete_all\" style=\"text-align:center; margin-top:40px\">BORRAR TODAS LAS FOTOS</button>\r\n                            </div>\r\n                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                    </div>
                </div>     
            </div>
        </div>

    </div>
</div>

<div class=""clear""></div>
    





<script>

    var device_tkn = ""1514348271"";

    $(function () {
        $(""#server_cur_pts"").datepicker();
        $(""#server_cur_pts"").datepicker(""option"", ""dateFormat"", 'yyyy/mm/dd');
        $(""#active_time"").datepicker();
        $(""#active_time"").datepicker(""option"", ""dateFormat"", 'yyyy/mm/dd');
        $(""#end_time"").datepicker();
        $(""#end_time"").datepicker(""option"", ""dateFormat"", 'yyyy/mm/dd');

        /* Verifica que boton se presiono y llama a la funcion adecuada */

        
    });

    $('#bind').on('click', bindMqtt);
    $('#unbind').on('click', unbindMqtt);
    $('#basic_config').on('click', deviceConfig);
    $('#network').on('click', networkConfig);
    $('#remote').on('click', remoteConfig);
    $('#temperature').on('click', temperatureConfig);
    $('#adds_user').on('click', addsUser);
    $('#dele");
            WriteLiteral(@"te_batch').on('click', deleteBatch);
    $('#delete_user').on('click', deleteUser);
    $('#delete_all').on('click', deleteAll);

    function bindMqtt() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);
        jsonMsg = 
            {
                mqtt_cmd: 1,
                mqtt_operate_id: 0,
                device_id:  $('#bind_device_id').val(),
                tag: dev_tag,
                bind_ctrl: 1
            };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 338 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: jsonMsg,
            },
            async: false,
            success: function(data) {
                
                var jsonPretty = ""<pre>"" + jsonMsg + ""</pre>"";  
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    }

    /* unbinding example
        {
            ""mqtt_cmd"":1,
            ""mqtt_operate_id"":10,
            ""device_token"":""1514348271"",
            ""device_id"":""7101389947744"",
            ""tag"":""platfrom define"",
            ""bind_ctrl"":0
        }
    */

    function unbindMqtt() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 376 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 0,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        bind_ctrl: 0
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    }

    /* device basic configuration example
    {
        ""mqtt_cmd"":1,
        ""mqtt_operate_id"":1,
        ""device_token"":""1057628122"",
        ""device_id"":""710138994774");
            WriteLiteral(@"4"",
        ""tag"":""platfrom define"",
        ""basic_config"":
        {
            ""dev_name"":""12315456445864"",
            ""dev_pwd"":""YWRtaW4="",
            ""sync_server_pts_en"":true,
            ""server_cur_pts"":""2020/05/18 11:07""
        }
    }

    */

    function deviceConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var name = $('#device_name').val();
        var pass = $('#device_pass').val();
        var time = $('#time_server').val();
        var sync = $('#sync_server').val();

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 433 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 1,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        basic_config:
                        {
                            dev_name :name,
                            dev_pwd : pass,
                            sync_server_pts_en: sync,
                            server_cur_pts : time
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
    ");
            WriteLiteral(@"            console.log(""Error Ajax"");
            }
        });
    }

    /* network configuration example
    {
        ""mqtt_cmd"":1,
        ""mqtt_operate_id"":2,
        ""device_token"":""1057628122"",
        ""device_id"":""7101389947744"",
        ""tag"":""platfrom define"",
        ""network_cofnig"":
        {
            ""ip_addr"":""172.18.195.67"",
            ""net_mask"":""255.255.248.0"",
            ""gateway"":""172.18.192.1"",
            ""DDNS1"":""211.136.192.6"",
            ""DDNS2"":""8.8.8.8"",
            ""DHCP"":false
        }
    }

    */

    function networkConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var ip = $('#ip').val();
        var mask = $('#mask').val();
        var gw = $('#gw').val();
        var dns1 = $('#dns1').val();
        var dns2 = $('#dns2').val();
        var dhcp = $('#dhcp').val();

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 500 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 2,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        network_config:
                        {
                            ip_addr : ip,
                            net_mask: mask,
                            gateway: gw,
                            DDNS1: dns1,
                            DDNS2: dns2,
                            DHCP: dhcp
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
            ");
            WriteLiteral(@"    }
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    }

    /* Device remote parameter Configuration example
    {
        ""mqtt_cmd"":1,
        ""mqtt_operate_id"":4,
        ""device_token"":""1057628122"",
        ""device_id"":""7101389947744"",
        ""tag"":""platfrom define"",
        ""remote_config"":
        {
            ""volume"":12,
            ""screen_brightness"":80,
            ""light_supplementary"":true
        }
    }


    */

    function remoteConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var vol = $('#vol').val();
        var bright = $('#bright').val();
        var light = $('#light').val();

        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 564 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 4,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        remote_config:
                        {
                            volume: vol,
                            screen_brightness: bright,
                            light_supplementary: light
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
 ");
            WriteLiteral(@"           }
        });
    }

    /* 	Device temperature control parameter configuration example
    {
        ""mqtt_cmd"":1,
        ""mqtt_operate_id"":6,
        ""device_token"":""1057628122"",
        ""device_id"":""7101389947744"",
        ""tag"":""platfrom define"",
        ""temperature_fun"":
        {
            ""temp_dec_en"":false,
            ""stranger_pass_en"":false,
            ""make_check_en"":false,
            ""alarm_temp"":37.4,
            ""temp_comp"":1.1,
            ""record_save_time"":24,
            ""save_record"":true,
            ""save_jpeg"":true
        }
    }
    */

    function temperatureConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var temp = $('#temp_dec_en').val();
        var stranger = $('#stranger_pass_en').val();
        var mask_check = $('#mask_check_enable').val();
        var video = $('#save_record').val();
        var photo = $('#save_jpeg').val();
        var alarm = $('#alarm_temp')");
            WriteLiteral(".val();\r\n        var tmp_comp = $(\'#temp_comp\').val();\r\n        var save_time = $(\'#record_save_time\').val();\r\n\r\n        $.ajax({\r\n            type: \"GET\",\r\n            url: \'");
#nullable restore
#line 633 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 6,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        temperature_fun:
                        {
                            temp_dec_en: temp,
                            stranger_pass_en: stranger,
                            make_check_en: mask_check,
                            alarm_temp: alarm,
                            temp_comp: tmp_comp,
                            record_save_time: save_time,
                            save_record: video,
                            save_jpeg: photo
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if");
            WriteLiteral(@" (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    }

    /* 	Add single or multiple user photo database information
    {
            ""mqtt_cmd"":1,
            ""mqtt_operate_id"":7,
            ""device_token"":""1514348271"",
            ""device_id"":""7101389947744"",
            ""tag"":""platfrom define"",
            ""piclib_manage"":0,
            ""param"":
            {
                ""lib_name"":""Smart Park"",
                ""lib_id"":""8"",
                ""server_ip"":""172.18.195.61"",
                ""server_port"":80,
                ""pictures"":
                [{
                    ""active_time"":""2020/01/1 00:00:01"",
                    ""user_id"":""11"",
                    ""user_name"":""Zhang San"",
                    ""end_time"":""2020/12/30 23:59:59"",
       ");
            WriteLiteral(@"             ""p_id"":""null"",
                    ""picture"":""/192952.JPG""
                },
                {
                    ""active_time"":""2020/01/1 00:00:01"",
                    ""user_id"":""22"",
                    ""user_name"":""LI SI"",
                    ""end_time"":""2020/12/30 23:59:59"",
                    ""p_id"":""null"",
                    ""picture"":""/linxiaofei.jpg""
                }]
            }
        }

    */

    function addsUser() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var batch_name = $('#batch_name').val();
        var batch_id = $('#batch_id').val();
        var address = $('#server_ip').val();
        var port = $('#server_port').val();
        var in_time = $('#active_time').val();
        var out_time = $('#end_time').val();
        var id_user = $('#user_id').val();
        var name_user = $('#user_name').val();
        var url = $('#picture').val();

        $.ajax({
            type: ""GET");
            WriteLiteral("\",\r\n            url: \'");
#nullable restore
#line 723 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 7,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        piclib_manage: 0,
                        param:
                        {
                            lib_name: batch_name,
                            lib_id: batch_id,
                            server_ip: address,
                            server_port: port,
                            pictures:
                            {
                                active_time: in_time,
                                user_id: id_user,
                                user_name: name_user,
                                end_time: out_time,
                                p_id: null,
                         ");
            WriteLiteral(@"       picture: url
                            }
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    }

    /* delete individual or multiple user face database information
    {
            ""mqtt_cmd"":1,
            ""mqtt_operate_id"":7,
            ""device_token"":""1057628122"",
            ""device_id"":""7101389947744"",
            ""tag"":""platfrom define"",
            ""piclib_manage"":3,
            ""param"":{
                ""users"":[
                    {
                        ""user_id"":""11""
                    },
                    {
                        ""user_id"":""22""
               ");
            WriteLiteral(@"     }
                ]
            }
        }
    */

    function deleteUser() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var user = $('#user_delete').val();
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 795 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 7,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        piclib_manage:3,
                        param:
                        {
                            users: {
                                user_id: user
                            }
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
     ");
            WriteLiteral(@"       }
        });
    }

    /* Delete the photo database information of the corresponding batch
    {
            ""mqtt_cmd"":1,
            ""mqtt_operate_id"":7,
            ""device_token"":""1057628122"",
            ""device_id"":""7101389947744"",
            ""tag"":""platfrom define"",
            ""piclib_manage"":2,
            ""param"":{
                ""lib"":[
                    {
                        ""lib_id"":""8""
                    },
                    {
                        ""lib_id"":""9""
                    }
                ]
            }
        }

    */

    function deleteBatch() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var batch = $('#batch_delete').val();
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 858 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 7,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        piclib_manage:2,
                        param:
                        {
                            lib: {
                                lib_id: batch
                            }
                        }
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
       ");
            WriteLiteral(@"     }
        });
    }

    /* Delete all photo library information
    {
            ""mqtt_cmd"":1,
            ""mqtt_operate_id"":7,
            ""device_token"":""1057628122"",
            ""device_id"":""7101389947744"",
            ""tag"":""platfrom define"",
            ""piclib_manage"":1
        }


    */

    function deleteAll() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();        
        $.ajax({
            type: ""GET"",
            url: '");
#nullable restore
#line 911 "/Users/amejia/qa/Proy Temperatura/fhir_panel/AspStudio/Views/Device/Index.cshtml"
             Write(Url.Action("publishMQTT", "Device"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            dataType: ""json"",
            data:{
                topic:""SubscribeTest"",
                msg: JSON.stringify(
                    {
                        mqtt_cmd: 1,
                        mqtt_operate_id: 7,
                        device_token: device_tkn,
                        device_id: dev_id,
                        tag: dev_tag,
                        piclib_manage:1                        
                    }
                ),
            },
            async: false,
            success: function(data) {
                if (data == null || data.data == null) {
                    console.log(""Error"")
                } else {
                    console.log(""Ok"")
                }
            },
            error: function() {
                console.log(""Error Ajax"");
            }
        });
    };
</script>

");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
