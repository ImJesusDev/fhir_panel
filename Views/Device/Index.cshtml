@{
    ViewData["Title"] = "Device Page";
}

<link href="@Url.Content("~/css/devices.css")" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="@Url.Content("~/js/device.js")"></script>

<div id="container">

    <div align="top" id="right" title="right pane" >
        <div class="row" id="mqtt_send" style="height:30%; border-left:1px">
            <div class="col-md-12">
                <h5 style="text-align:center;"> Datos de salida Mqtt</h5>
                <div class="mqtt_send wordwrap">
                    
                </div>
            </div>
        </div>
        <div class="row" style="height:70%; border-left:1px">
            <div class="col-md-12">
                <h5  style="text-align:center;"> Datos de entrada Mqtt</h5>
                <div class="row">
                    <div class="col-6">
                        <ul id="messagesList"></ul>
                    </div>
                </div>
                <div id="mqtt_receive">

                </div>
            </div>
        </div>
    </div>

    <div id="content-wrapper">
        
        <div id="content_devices">
            <div class="row">

                <!-- Device Bind /unbind -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">BIND /UNBIND</h4>
                        
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Device Id</span></div><input autocomplete="off" type="text" class="form-control" id="bind_device_id" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Tag</span></div><input autocomplete="off" type="text" class="form-control" id="bind_tag" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="bind" >BIND</button>
                            <button class="btn btn-danger" id="unbind" >UN-BIND</button>
                        </div>

                    </div>
                </div>

                <!--    Device Basic Configuration -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">CONFIGURACIÓN BÁSICA </h4>


                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Nombre Dispositivo</span></div><input autocomplete="off" type="text" class="form-control" id="device_name" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Contraseña Dispositivo</span></div><input autocomplete="off" type="text" class="form-control" id="device_passwd" />
                            <div class="input-group-append"></div>
                        </div>

                        <div class="input-group">                            
                            <div class="input-group-prepend"><span class="input-group-text">Fecha y Hora servidor </span></div><input type="date" class="form-control" id="server_cur_pts" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class="onoffswitch"><input type="checkbox" id="sync_server_pts_en" class="" name="onoffswitch" /> Sincronizar Hora dispositivo <label class="onoffswitch-label" for="myonoffswitch"><span class="onoffswitch-inner"></span><span class="onoffswitch-switch"></span></label></div>
                            </div>
                        </div>
                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="basic_config" style="text-align:center">ACTUALIZAR</button>
                        </div>


                    </div>
                </div>

                <!--    Device Network Configuration -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">DATOS DE RED</h4>


                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"> Direccion IP</span></div><input autocomplete="off" type="text" class="form-control" id="ip" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Mascara de red</span></div><input autocomplete="off" type="text" class="form-control" id="mask" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Puerta de red</span></div><input autocomplete="off" type="text" class="form-control" id="gw" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Servidor DDNS1</span></div><input autocomplete="off" type="text" class="form-control" id="dns1" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Servidor DDNS2</span></div><input autocomplete="off" type="text" class="form-control" id="dns2" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input type="checkbox" id="dhcp" class="" name="dhcp" /> Utilizar DHCP <label class="" for="dhcp"></label></div>
                            </div>
                        </div>

                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="network" style="text-align:center">ACTUALIZAR</button>
                        </div>


                    </div>
                </div>

                <!--    Device Remote Configuration -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">BRILLO / VOLÚMEN / LUZ</h4>


                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"> Volumen </span></div><input autocomplete="off" type="text" class="form-control" id="vol" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Brillo </span></div><input  autocomplete="off"type="text" class="form-control" id="bright" />
                            <div class="input-group-append"></div>
                        </div>

                        <div class="form-group">
                            <div class="settingsElement">
                                <div class="onoffswitch"><input type="checkbox" id="light_en" class="" name="onoffswitch" /> Luz suplementaria <label class="onoffswitch-label" for="myonoffswitch"><span class="onoffswitch-inner"></span><span class="onoffswitch-switch"></span></label></div>
                            </div>
                        </div>

                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="device_remote_config" style="text-align:center">ACTUALIZAR</button>
                        </div>


                    </div>
                </div>

                <!--    Device Temperature Control Parameter Configuration -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">TEMPERATURA</h4>


                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input autocomplete="off" type="checkbox" id="temp_dec_en" class="" name="temp_dec_en" /> Toma de temperatura <label class="onoffswitch-label" for="myonoffswitch"></label></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input autocomplete="off" type="checkbox" id="stranger_pass_en" class="" name="stranger_pass_en" /> Acceso a extraños <label class="onoffswitch-label" for="myonoffswitch"></label></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input autocomplete="off" type="checkbox" id="mask_check_en" class="" name="mask_check_en" /> Detección de tapabocas <label class="onoffswitch-label" for="myonoffswitch"></label></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input autocomplete="off" type="checkbox" id="save_record" class="" name="save_record" /> Toma de videos <label class="onoffswitch-label" for="myonoffswitch"></label></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="settingsElement">
                                <div class=""><input  autocomplete="off" type="checkbox" id="save_jpeg" class="" name="save_jpeg" /> Toma de instantáneas <label class="onoffswitch-label" for="myonoffswitch"></label></div>
                            </div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span autocomplete="off" class="input-group-text">Temperatura de alarma </span></div><input type="text" class="form-control" id="alarm_temp"/>
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span autocomplete="off" class="input-group-text">Compensación de temperatura </span></div><input type="text" class="form-control" id="temp_comp" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span autocomplete="off" class="input-group-text">Tiempo de guardado de instantáneas. </span></div><input type="text" class="form-control" id="record_save_time" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="temperature" style="text-align:center">ACTUALIZAR</button>
                        </div>

                    </div>
                </div>

                <!--   Add single or multiple user photo database information -->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">INGRESO DE USUARIOS A LA BASE DE DATOS</h4>

                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"> Nombre del lote </span></div><input autocomplete="off" type="text" class="form-control" id="batch_name"/>
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">ID del lote</span></div><input autocomplete="off" type="text" class="form-control" id="batch_id" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Dirección IP servidor de fotos</span></div><input autocomplete="off" type="text" class="form-control" id="server_ip" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Puerto del servidor</span></div><input autocomplete="off" type="text" class="form-control" id="server_port"/>
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Fecha de ingreso</span></div><input autocomplete="off" type="date" class="form-control" id="active_time" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Fecha de salida</span></div><input autocomplete="off" type="date" class="form-control" id="end_time" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">ID del usuario</span></div><input autocomplete="off" type="text" class="form-control" id="user_id" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">Nombre de usuario</span></div><input autocomplete="off" type="text" class="form-control" id="user_name" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text">URL de fotografía.</span></div><input autocomplete="off" type="text" class="form-control" id="picture" />
                            <div class="input-group-append"></div>
                        </div>
                        <div class="row" style="margin-top:20px;justify-content:center">
                            <button class="btn btn-success" id="adds_user" style="align-self:center">ACTUALIZAR</button>
                        </div>

                    </div>
                </div>

                <!--   Get parameters device-->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">CONSULTA DE TODOS LOS PARÁMETROS</h4>
                                               
                        <div class="row" style="justify-content: center">
                            <button class="btn btn-danger" id="get_parameters" style="text-align:center">OBTENER PARÁMETROS</button>
                        </div>

                    </div>
                </div>
                
                <!--   Delete all photo library information-->
                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">BORRADO EN LA BASE DE DATOS</h4>

                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"> ID del lote </span></div><input autocomplete="off" type="text" class="form-control" id="batch_delete" />
                            <div class="input-group-append"><button class="btn btn-success" id="delete_batch" style="width:150px;">BORRAR LOTE</button></div>
                        </div>
                        <div class="input-group">
                            <div class="input-group-prepend"><span class="input-group-text"> ID del usuario </span></div><input autocomplete="off" type="text" class="form-control" id="user_delete" />
                            <div class="input-group-append"><button class="btn btn-success" id="delete_user" style="width:150px;">BORRAR USUARIO</button></div>
                        </div>
                        <div></div>
                        <div class="row" style="justify-content: center">
                            <button class="btn btn-danger" id="delete_all" style="text-align:center; margin-top:40px">BORRAR TODAS LAS FOTOS</button>
                        </div>

                    </div>
                </div>

                
            </div>
        </div>

    </div>
</div>

<div class="clear"></div>
    

    
<!-- Carga las librerias de MQTT js -->
<!--  <script src="~/js/mqtt.js"></script> -->

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script src="~/js/chat.js"></script>


<script>

    $(function () {
        $('#datetimepicker1').datetimepicker();
    });

    var device_tkn = "1514348271";

   /* $(function () {
        //$("#server_cur_pts").datepicker();
        $("#server_cur_pts").datepicker("option", "dateFormat", 'yyyy/mm/dd');
        //$("#active_time").datepicker();
        $("#active_time").datepicker("option", "dateFormat", 'yyyy/mm/dd');
       // $("#end_time").datepicker();
        $("#end_time").datepicker("option", "dateFormat", 'yyyy/mm/dd');     

    });*/

    $('#bind').on('click', bindMqtt);
    $('#unbind').on('click', unbindMqtt);
    $('#basic_config').on('click', deviceConfig);
    $('#network').on('click', networkConfig);
    $('#device_remote_config').on('click', remoteConfig);
    $('#temperature').on('click', tempConfig);
    $('#adds_user').on('click', addsUser);
    $('#delete_batch').on('click', deleteBatch);
    $('#delete_user').on('click', deleteUser);
    $('#delete_all').on('click', deleteAll);
    $('#get_parameters').on('click', getParameters);


    function bindMqtt() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
            {
                mqtt_cmd: 1,
                mqtt_operate_id: 0,
                device_id:  $('#bind_device_id').val(),
                tag: dev_tag,
                bind_ctrl: 1
            };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic:"SubscribeTest",
                msg: jsonMsg,
            },
            async: false,
            success: function(data) {

                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error sending Bind");
            }
        });
    }

    /* unbinding example
        {
            "mqtt_cmd":1,
            "mqtt_operate_id":10,
            "device_token":"1514348271",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "bind_ctrl":0
        }
    */

    function unbindMqtt() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 0,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            bind_ctrl: 0
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);

        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic:"SubscribeTest",
                msg: jsonMsg,
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error in unbinding");
            }
        });
    }

    /* device basic configuration example
    {
        "mqtt_cmd":1,
        "mqtt_operate_id":1,
        "device_token":"1057628122",
        "device_id":"7101389947744",
        "tag":"platfrom define",
        "basic_config":
        {
            "dev_name":"12315456445864",
            "dev_pwd":"YWRtaW4=",
            "sync_server_pts_en":true,
            "server_cur_pts":"2020/05/18 11:07"
        }
    }

    */

    function deviceConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var name = $('#device_name').val();
        var pass = $('#device_pass').val();
        var time = $('#time_server').val();
        var sync = $('#sync_server').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
        {

            mqtt_cmd: 1,
            mqtt_operate_id: 1,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            basic_config:
            {
                dev_name: name,
                dev_pwd: pass,
                sync_server_pts_en: sync,
                server_cur_pts: time
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error in device configuration parameters");
            }
        });
    }

    /* network configuration example
    {
        "mqtt_cmd":1,
        "mqtt_operate_id":2,
        "device_token":"1057628122",
        "device_id":"7101389947744",
        "tag":"platfrom define",
        "network_cofnig":
        {
            "ip_addr":"172.18.195.67",
            "net_mask":"255.255.248.0",
            "gateway":"172.18.192.1",
            "DDNS1":"211.136.192.6",
            "DDNS2":"8.8.8.8",
            "DHCP":false
        }
    }

    */

    function networkConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var ip = $('#ip').val();
        var mask = $('#mask').val();
        var gw = $('#gw').val();
        var dns1 = $('#dns1').val();
        var dns2 = $('#dns2').val();
        var dhcp;
        if ($("#dhcp").is(":checked")) {
            dhcp = true;
        }
        else {
            dhcp = false;
        }

        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 2,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            network_config:
            {
                ip_addr: ip,
                net_mask: mask,
                gateway: gw,
                DDNS1: dns1,
                DDNS2: dns2,
                DHCP: dhcp
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error setting network parameters");
            }
        });
    }

    /* Device remote parameter Configuration example
    {
        "mqtt_cmd":1,
        "mqtt_operate_id":4,
        "device_token":"1057628122",
        "device_id":"7101389947744",
        "tag":"platfrom define",
        "remote_config":
        {
            "volume":12,
            "screen_brightness":80,
            "light_supplementary":true
        }
    }


    */

    function remoteConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var vol = $('#vol').val();
        var bright = $('#bright').val();
        var light;
        if ($("#light_en").is(":checked")) {
            light = true;
        }
        else {
            light = false;
        }
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 4,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            remote_config:
            {
                volume: vol,
                screen_brightness: bright,
                light_supplementary: light
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);

        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {

                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error setting remote parameters");
            }
        });
    }

    /* 	Device temperature control parameter configuration example
    {
        "mqtt_cmd":1,
        "mqtt_operate_id":6,
        "device_token":"1057628122",
        "device_id":"7101389947744",
        "tag":"platfrom define",
        "temperature_fun":
        {
            "temp_dec_en":false,
            "stranger_pass_en":false,
            "make_check_en":false,
            "alarm_temp":37.4,
            "temp_comp":1.1,
            "record_save_time":24,
            "save_record":true,
            "save_jpeg":true
        }
    }
    */

    function tempConfig() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var temp, stranger, mask_check, video, photo;        
        var alarm = $('#alarm_temp').val();
        var tmp_comp = $('#temp_comp').val();
        var save_time = $('#record_save_time').val();

        if ($("#temp_dec_en").is(":checked")) {
            temp = true;
        }
        else {
            temp = false;
        }
        if ($("#stranger_pass_en").is(":checked")) {
            stranger = true;
        }
        else {
            stranger = false;
        }
        if ($("#mask_check_en").is(":checked")) {
            mask_check = true;
        }
        else {
            mask_check = false;
        }
        if ($("#save_record").is(":checked")) {
            video = true;
        }
        else {
            video = false;
        }
        if ($("#save_jpeg").is(":checked")) {
            photo = true;
        }
        else {
            photo = false;
        }
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 6,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            temperature_fun:
            {
                temp_dec_en: temp,
                stranger_pass_en: stranger,
                make_check_en: mask_check,
                alarm_temp: alarm,
                temp_comp: tmp_comp,
                record_save_time: save_time,
                save_record: video,
                save_jpeg: photo
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);

        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error setting temperature parameters");
            }
        });
    }

    /* 	Add single or multiple user photo database information
    {
            "mqtt_cmd":1,
            "mqtt_operate_id":7,
            "device_token":"1514348271",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "piclib_manage":0,
            "param":
            {
                "lib_name":"Smart Park",
                "lib_id":"8",
                "server_ip":"172.18.195.61",
                "server_port":80,
                "pictures":
                [{
                    "active_time":"2020/01/1 00:00:01",
                    "user_id":"11",
                    "user_name":"Zhang San",
                    "end_time":"2020/12/30 23:59:59",
                    "p_id":"null",
                    "picture":"/192952.JPG"
                },
                {
                    "active_time":"2020/01/1 00:00:01",
                    "user_id":"22",
                    "user_name":"LI SI",
                    "end_time":"2020/12/30 23:59:59",
                    "p_id":"null",
                    "picture":"/linxiaofei.jpg"
                }]
            }
        }

    */

    function addsUser() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var batch_name = $('#batch_name').val();
        var batch_id = $('#batch_id').val();
        var address = $('#server_ip').val();
        var port = $('#server_port').val();
        var in_time = $('#active_time').val();
        var out_time = $('#end_time').val();
        var id_user = $('#user_id').val();
        var name_user = $('#user_name').val();
        var url = $('#picture').val();

        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 7,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            piclib_manage: 0,
            param:
            {
                lib_name: batch_name,
                lib_id: batch_id,
                server_ip: address,
                server_port: port,
                pictures:
                {
                    active_time: in_time,
                    user_id: id_user,
                    user_name: name_user,
                    end_time: out_time,
                    p_id: null,
                    picture: url
                }
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error adding new user");
            }
        });
    }

    /* delete individual or multiple user face database information
    {
            "mqtt_cmd":1,
            "mqtt_operate_id":7,
            "device_token":"1057628122",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "piclib_manage":3,
            "param":{
                "users":[
                    {
                        "user_id":"11"
                    },
                    {
                        "user_id":"22"
                    }
                ]
            }
        }
    */

    function deleteUser() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var user = $('#user_delete').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 7,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            piclib_manage: 3,
            param:
            {
                users: {
                    user_id: user
                }
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic:"SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error deleting user ");
            }
        });
    }

    /* Delete the photo database information of the corresponding batch
    {
            "mqtt_cmd":1,
            "mqtt_operate_id":7,
            "device_token":"1057628122",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "piclib_manage":2,
            "param":{
                "lib":[
                    {
                        "lib_id":"8"
                    },
                    {
                        "lib_id":"9"
                    }
                ]
            }
        }

    */

    function deleteBatch() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        var batch = $('#batch_delete').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 7,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            piclib_manage: 2,
            param:
            {
                lib: {
                    lib_id: batch
                }
            }
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg,
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error deleting batch");
            }
        });
    }

    /* Delete all photo library information
    {
            "mqtt_cmd":1,
            "mqtt_operate_id":7,
            "device_token":"1057628122",
            "device_id":"7101389947744",
            "tag":"platfrom define",
            "piclib_manage":1
        }


    */

    function deleteAll() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
        {
            mqtt_cmd: 1,
            mqtt_operate_id: 7,
            device_token: device_tkn,
            device_id: dev_id,
            tag: dev_tag,
            piclib_manage: 1
        };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic: "SubscribeTest",
                msg: jsonMsg
            },
            async: false,
            success: function(data) {
                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error deleting all");
            }
        });
    };

    /*
        Platform Get Device System Parameters

        {
		"mqtt_cmd":2,
		"device_id":"7101389947744",
		"tag":"platfrom define",
		"device_token":"1057628122"
	    }


       */
     function getParameters() {
        var dev_id = $('#bind_device_id').val();
        var dev_tag = $('#bind_tag').val();
        console.log(dev_id, dev_tag);
        jsonMsg =
            {
                mqtt_cmd: 2,                
                device_id: dev_id,
                tag: dev_tag,
                device_token: device_tkn
            };
        jsonMsg = JSON.stringify(jsonMsg);
        console.log(jsonMsg);
        $.ajax({
            type: "GET",
            url: '@Url.Action("publishMQTT", "Device")',
            dataType: "json",
            data:{
                topic:"SubscribeTest",
                msg: jsonMsg,
            },
            async: false,
            success: function(data) {

                var jsonPretty = "<pre>" + jsonMsg + "</pre>";
                $('#mqtt_send').html(
                    jsonPretty
                )
            },
            error: function() {
                console.log("Error getting parameters");
            }
        });
    }
</script>

